{"version":3,"sources":["images/tmdb-logo.svg","contexts/ParsedConfigurationContext.ts","components/MovieListItem/styles.ts","components/Poster/styles.ts","types/SizeType.ts","util/imageUtil.ts","hooks/useSources.ts","components/Poster/Poster.tsx","components/StarRating/StarRating.tsx","components/MovieListItem/MovieListItem.tsx","components/MovieList/styles.ts","components/MovieList/MovieList.tsx","api/moviedb.ts","views/HomeView/HomeView.tsx","components/Footer/Footer.tsx","components/Header/styles.ts","components/Header/Header.tsx","layouts/StandardLayout/styles.ts","layouts/StandardLayout/StandardLayout.tsx","views/HomeView/MovieView.tsx","themes/darkTheme.ts","themes/lightTheme.ts","components/App/App.tsx","hooks/useConfiguration.ts","serviceWorker.ts","index.tsx"],"names":["module","exports","ParsedConfigurationContext","React","createContext","undefined","Cover","styled","div","theme","dark","text","main","CoverContent","current","shadow","Background","Container","accent","SizeType","Wrapper","width","height","bg","alt","Img","img","parseImageConfig","images","baseUrl","base_url","secureBaseUrl","secure_base_url","backdropSizes","parseSizes","backdrop_sizes","logoSizes","logo_sizes","posterSizes","poster_sizes","profileSizes","profile_sizes","stillSizes","still_sizes","list","filter","size","startsWith","map","parseInt","substring","useSources","sizeType","path","useState","src","setSrc","srcSet","setSrcSet","sizes","setSizes","imageConfig","useContext","ImageConfigurationContext","useEffect","Poster","Backdrop","Profile","Still","Logo","minIndex","findIndex","usableSizes","slice","urls","url","i","toFixed","join","getSources","title","data-testid","StarRating","rating","fullStarCount","Math","floor","hasHalfStar","Array","_","key","MovieListItem","movie","to","id","slugify","poster_path","vote_average","ScrollContainer","item","normal","hover","active","ChildContainer","ChildWrapper","ScrollSnapButton","preloadFallback","scroll","container","multiplier","scrollBy","behavior","left","window","innerWidth","MovieList","movies","label","scrollContainer","useRef","handleScrollLeft","useCallback","handleScrollRight","movieList","ref","onClick","style","right","moviedb","MovieDb","process","Home","setMovies","trending","media_type","time_window","then","v","results","Footer","marginTop","href","target","rel","TMDBLogo","header","LeftSection","RightSection","ThemeToggle","Header","useTheme","handleThemeToggle","setTheme","isDark","light","StandardLayout","children","MovieView","setMovie","params","useParams","movieInfo","catch","console","error","darkTheme","shadowColor","dist","lightTheme","App","config","setImageConfig","configuration","useConfiguration","Provider","value","exact","HomeView","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a6a71e63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tmdb-logo.24a6fdb9.svg\";","import React from \"react\";\nimport ParsedConfiguration from \"types/ParsedConfiguration\";\n\nconst ParsedConfigurationContext = React.createContext<\n  ParsedConfiguration | undefined\n>(undefined);\n\nexport default ParsedConfigurationContext;\n","import styled from \"styled-components\";\n\nexport const Cover = styled.div`\n  visibility: hidden;\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 1rem;\n  color: ${({ theme }) => theme.dark.text.main};\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  justify-content: flex-end;\n  font-size: 1.25rem;\n  transition-duration: 0.2s;\n`;\n\nexport const CoverContent = styled.div`\n  visibility: hidden;\n  position: relative;\n  top: 1rem;\n  opacity: 0;\n  transition-duration: 0.2s;\n  text-shadow: ${({ theme }) => theme.current.shadow(1)};\n`;\n\nexport const Background = styled.div`\n  transition-duration: 0.2s;\n`;\n\nexport const Container = styled.div`\n  width: 220px;\n  height: 330px;\n  border-radius: 1rem;\n  overflow: hidden;\n  position: relative;\n  user-select: none;\n  transition-duration: 0.2s;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: 0 4px 8px ${({ theme }) => theme.current.accent.main};\n  }\n\n  &:hover > ${Cover} {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:hover ${CoverContent} {\n    visibility: visible;\n    opacity: 1;\n    top: 0;\n  }\n\n  &:hover > ${Background} {\n    filter: blur(1px);\n    transform: scale(1.025);\n  }\n`;\n","import styled from \"styled-components\";\n\ninterface WrapperProps {\n  width: number;\n  height: number;\n}\n\nexport const Wrapper = styled.div<WrapperProps>`\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  background-color: ${({ theme }) => theme.current.bg.alt};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  user-select: none;\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  transition-duration: 0.2s;\n`;\n","enum SizeType {\n  Poster,\n  Backdrop,\n  Profile,\n  Still,\n  Logo,\n}\n\nexport default SizeType;\n","import { ConfigurationResponse } from \"moviedb-promise/dist/request-types\";\nimport ImageConfiguration from \"types/ParsedConfiguration\";\n\nexport function parseImageConfig({ images }: ConfigurationResponse): ImageConfiguration {\n  return {\n    baseUrl: images.base_url || \"http://image.tmdb.org/t/p/\",\n    secureBaseUrl: images.secure_base_url || \"https://image.tmdb.org/t/p/\",\n    backdropSizes: parseSizes(images.backdrop_sizes),\n    logoSizes: parseSizes(images.logo_sizes),\n    posterSizes: parseSizes(images.poster_sizes),\n    profileSizes: parseSizes(images.profile_sizes),\n    stillSizes: parseSizes(images.still_sizes),\n  }\n}\n\nfunction parseSizes(list: string[] | undefined): number[] {\n  if (list === undefined) return [];\n\n  return list\n    .filter(size => size.startsWith(\"w\"))\n    .map(size => parseInt(size.substring(1)))\n}\n\nexport function getSources(path: string, baseUrl: string, sizes: number[], width: number): { src: string, srcSet: string } {\n  const minIndex = sizes.findIndex(size => size >= width)\n  const usableSizes = sizes.slice(minIndex)\n  const urls = usableSizes.map(size => `${baseUrl}w${size}${path}`)\n  const srcSet = urls.map((url, i) => `${url} ${(usableSizes[i] / usableSizes[0]).toFixed(1)}x`).join(\", \")\n\n  return {\n    src: urls[0],\n    srcSet\n  }\n}\n","import { useState, useContext, useEffect } from \"react\";\nimport { getSources } from \"util/imageUtil\";\nimport ImageConfigurationContext from \"contexts/ParsedConfigurationContext\";\nimport SizeType from \"types/SizeType\";\n\nconst useSources = (width: number, sizeType: SizeType, path?: string) => {\n  const [src, setSrc] = useState<string>();\n  const [srcSet, setSrcSet] = useState<string>();\n  const [sizes, setSizes] = useState<number[]>();\n\n  const imageConfig = useContext(ImageConfigurationContext);\n\n  useEffect(() => {\n    if (!imageConfig || !path) return;\n    switch (sizeType) {\n      case SizeType.Poster:\n        setSizes(imageConfig.posterSizes);\n        break;\n      case SizeType.Backdrop:\n        setSizes(imageConfig.backdropSizes);\n        break;\n      case SizeType.Profile:\n        setSizes(imageConfig.profileSizes);\n        break;\n      case SizeType.Still:\n        setSizes(imageConfig.stillSizes);\n        break;\n      case SizeType.Logo:\n        setSizes(imageConfig.logoSizes);\n        break;\n    }\n  }, [sizeType, imageConfig, path]);\n\n  useEffect(() => {\n    if (!path || !imageConfig || !sizes) return;\n    const { src, srcSet } = getSources(\n      path,\n      imageConfig.secureBaseUrl,\n      sizes,\n      width\n    );\n\n    setSrc(src);\n    setSrcSet(srcSet);\n  }, [path, width, imageConfig, sizes]);\n\n  return { src, srcSet };\n};\n\nexport default useSources;\n","import React from \"react\";\nimport { Img, Wrapper } from \"./styles\";\nimport useSources from \"hooks/useSources\";\nimport SizeType from \"types/SizeType\";\n\ninterface PosterProps {\n  path?: string;\n  title?: string;\n  width: number;\n  height: number;\n}\n\nconst Poster: React.FC<PosterProps> = ({ path, title, width, height }) => {\n  const { src, srcSet } = useSources(width, SizeType.Poster, path);\n\n  return (\n    <Wrapper width={width} height={height}>\n      {src ? (\n        <Img\n          data-testid=\"poster-image\"\n          width={width}\n          height={height}\n          alt={title}\n          src={src}\n          srcSet={srcSet}\n        />\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default Poster;\n","import React from \"react\";\nimport { FaStar, FaStarHalf } from \"react-icons/fa\";\n\ninterface StarRatingProps {\n  rating: number;\n}\n\nconst StarRating: React.FC<StarRatingProps> = ({ rating }) => {\n  const fullStarCount = Math.floor(rating / 2);\n  const hasHalfStar = rating % 2 >= 1;\n\n  return (\n    <div data-testid=\"star-container\">\n      {[...Array(fullStarCount)].map((_, i) => (\n        <FaStar key={i} />\n      ))}\n      {hasHalfStar ? <FaStarHalf data-testid=\"half-star\" /> : null}\n    </div>\n  );\n};\n\nexport default StarRating;\n","import React from \"react\";\nimport { Container, Cover, CoverContent, Background } from \"./styles\";\nimport Poster from \"components/Poster/Poster\";\nimport { MovieResult } from \"moviedb-promise/dist/request-types\";\nimport StarRating from \"components/StarRating/StarRating\";\nimport { Link } from \"react-router-dom\";\nimport slugify from \"slugify\";\n\ninterface MovieListItemProps {\n  movie?: MovieResult;\n}\n\nconst MovieListItem: React.FC<MovieListItemProps> = ({ movie }) => {\n  return (\n    <Link to={movie ? `/movie/${movie.id}/${slugify(movie.title || \"\")}` : \"#\"}>\n      <Container>\n        <Background>\n          <Poster\n            width={220}\n            height={330}\n            path={movie?.poster_path}\n            title={movie?.title}\n          />\n        </Background>\n        {movie ? (\n          <Cover>\n            <CoverContent>\n              <div>{movie.title}</div>\n              {movie.vote_average ? (\n                <StarRating rating={movie.vote_average} />\n              ) : null}\n            </CoverContent>\n          </Cover>\n        ) : null}\n      </Container>\n    </Link>\n  );\n};\n\nexport default MovieListItem;\n","import styled from \"styled-components\";\n\nexport const ScrollContainer = styled.div`\n  display: flex;\n  overflow-x: auto;\n  height: 100%;\n  flex-wrap: nowrap;\n  scroll-snap-type: x mandatory;\n\n  &::-webkit-scrollbar {\n    height: 12px;\n    visibility: hidden;\n    background-color: ${({ theme }) => theme.current.bg.alt};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.current.item.alt.normal};\n    border-radius: 999px;\n    visibility: hidden;\n\n    &:hover {\n      background-color: ${({ theme }) => theme.current.item.alt.hover};\n    }\n    &:active {\n      background-color: ${({ theme }) => theme.current.item.alt.active};\n    }\n  }\n`;\n\nexport const ChildContainer = styled.div`\n  height: 100%;\n  margin: 8px 0;\n  display: flex;\n  scroll-snap-align: start;\n`;\n\nexport const ChildWrapper = styled.div`\n  scroll-snap-align: start;\n  padding-left: 16px;\n  &:first-child {\n    padding-left: 64px;\n  }\n  &:last-child {\n    padding-right: 64px;\n  }\n`;\n\nexport const ScrollSnapButton = styled.div`\n  background-color: ${({ theme }) => theme.current.item.alt.normal};\n  width: 64px;\n  height: 64px;\n  margin: 0 8px;\n  position: absolute;\n  top: calc(50% - 32px);\n  display: flex;\n  border-radius: 50%;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  transition-duration: 0.2s;\n  visibility: hidden;\n  opacity: 0;\n  color: ${({ theme }) => theme.current.item.alt.text};\n  font-size: 2rem;\n  cursor: pointer;\n  box-shadow: ${({ theme }) => theme.current.shadow(2)};\n\n  &:hover {\n    border-radius: 50% 8px 8px 50%;\n    transform: scale(1.1);\n    background-color: ${({ theme }) => theme.current.item.alt.hover};\n    box-shadow: ${({ theme }) => theme.current.shadow(4)};\n  }\n\n  &:active {\n    transform: scale(1);\n    background-color: ${({ theme }) => theme.current.item.alt.active};\n    box-shadow: ${({ theme }) => theme.current.shadow(1)};\n  }\n\n  &:last-child:hover {\n    border-radius: 8px 50% 50% 8px;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n\n  &:hover > ${ScrollSnapButton} {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:hover > ${ScrollContainer}::-webkit-scrollbar {\n    visibility: visible;\n  }\n  &:hover > ${ScrollContainer}::-webkit-scrollbar-thumb {\n    visibility: visible;\n  }\n`;\n","import React, { useCallback, useRef } from \"react\";\nimport MovieListItem from \"components/MovieListItem/MovieListItem\";\nimport { MovieResult } from \"moviedb-promise/dist/request-types\";\nimport { FaCaretLeft, FaCaretRight } from \"react-icons/fa\";\nimport {\n  Container,\n  ChildContainer,\n  ChildWrapper,\n  ScrollSnapButton,\n  ScrollContainer,\n} from \"./styles\";\n\ninterface MovieListProps {\n  movies?: MovieResult[];\n  label?: string;\n}\n\nconst preloadFallback: undefined[] = [...Array(10)];\n\nfunction scroll(container: HTMLDivElement | null, multiplier: number) {\n  if (container)\n    container.scrollBy({\n      behavior: \"smooth\",\n      left: window.innerWidth * multiplier,\n    });\n}\n\nconst MovieList: React.FC<MovieListProps> = ({ movies, label }) => {\n  const scrollContainer = useRef<HTMLDivElement>(null);\n\n  const handleScrollLeft = useCallback(() => {\n    scroll(scrollContainer.current, -0.5);\n  }, []);\n\n  const handleScrollRight = useCallback(() => {\n    scroll(scrollContainer.current, 0.5);\n  }, []);\n\n  let movieList: (MovieResult | undefined)[] = movies || preloadFallback;\n\n  return (\n    <Container>\n      <h2>{label}</h2>\n      <ScrollContainer ref={scrollContainer}>\n        <ChildContainer>\n          {movieList.map((movie, i) => (\n            <ChildWrapper key={movie?.id || i}>\n              <MovieListItem movie={movie} />\n            </ChildWrapper>\n          ))}\n        </ChildContainer>\n      </ScrollContainer>\n      <ScrollSnapButton onClick={handleScrollLeft} style={{ left: 0 }}>\n        <FaCaretLeft />\n      </ScrollSnapButton>\n      <ScrollSnapButton onClick={handleScrollRight} style={{ right: 0 }}>\n        <FaCaretRight />\n      </ScrollSnapButton>\n    </Container>\n  );\n};\n\nexport default MovieList;\n","import { MovieDb } from 'moviedb-promise';\n\nif (!process.env.REACT_APP_API_KEY) throw new Error('No API key provided');\n\nconst moviedb = new MovieDb(process.env.REACT_APP_API_KEY);\n\nexport default moviedb;\n","import React, { useEffect, useState } from \"react\";\nimport MovieList from \"components/MovieList/MovieList\";\nimport moviedb from \"api/moviedb\";\nimport { MovieResult } from \"moviedb-promise/dist/request-types\";\n\nconst Home: React.FC = () => {\n  const [movies, setMovies] = useState<MovieResult[]>();\n\n  useEffect(() => {\n    moviedb\n      .trending({ media_type: \"movie\", time_window: \"week\" })\n      .then((v) => v.results as MovieResult[])\n      .then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport TMDBLogo from \"images/tmdb-logo.svg\";\n\nconst Footer: React.FC = () => {\n  return (\n    <footer style={{ marginTop: \"auto\" }}>\n      <a\n        href=\"https://developers.themoviedb.org/3\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img width={128} src={TMDBLogo} alt=\"The Movie DB\" />\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import styled from \"styled-components\";\n\nexport const Container = styled.header``;\n\nexport const LeftSection = styled.div``;\n\nexport const RightSection = styled.div``;\n\nexport const ThemeToggle = styled.div``;\n","import React, { useCallback } from \"react\";\nimport { Container, LeftSection, RightSection, ThemeToggle } from \"./styles\";\nimport { FaAdjust } from \"react-icons/fa\";\nimport { useTheme } from \"styled-components\";\n\nconst Header: React.FC = () => {\n  const theme = useTheme();\n\n  const handleThemeToggle = useCallback(() => {\n    theme.setTheme(theme.current.isDark ? theme.light : theme.dark);\n  }, [theme]);\n\n  return (\n    <Container>\n      <LeftSection></LeftSection>\n      <RightSection>\n        <ThemeToggle onClick={handleThemeToggle}>\n          <FaAdjust />\n        </ThemeToggle>\n      </RightSection>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  background-color: ${({ theme }) => theme.current.bg.main};\n  color: ${({ theme }) => theme.current.text.main};\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  transition: background-color 0.4s, color 0.4s;\n`;\n","import React from \"react\";\nimport Footer from \"components/Footer/Footer\";\nimport Header from \"components/Header/Header\";\nimport { Container } from \"./styles\";\n\nconst StandardLayout: React.FC = ({ children }) => {\n  return (\n    <Container>\n      <Header />\n      {children}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default StandardLayout;\n","import React, { useEffect, useState } from \"react\";\nimport Poster from \"components/Poster/Poster\";\nimport moviedb from \"api/moviedb\";\nimport { useParams } from \"react-router-dom\";\nimport { MovieResponse } from \"moviedb-promise/dist/request-types\";\n\nconst MovieView: React.FC = () => {\n  const [movie, setMovie] = useState<MovieResponse>();\n  const params = useParams<{ id: string }>();\n\n  useEffect(() => {\n    moviedb.movieInfo(params.id).then(setMovie).catch(console.error);\n  }, [params]);\n\n  return (\n    <div>\n      <Poster\n        path={movie?.poster_path}\n        width={256}\n        height={384}\n        title={movie?.title}\n      />\n    </div>\n  );\n};\n\nexport default MovieView;\n","import Theme from \"types/Theme\";\n\nconst darkTheme: Theme = {\n  isDark: true,\n  bg: {\n    main: \"#242424\",\n    alt: \"#303030\",\n  },\n  text: {\n    main: \"#f0f0f0\",\n    alt: \"#dbdbdb\",\n  },\n  accent: {\n    main: \"#40c2ff\",\n    alt: \"#0083c9\",\n  },\n  item: {\n    normal: \"red\",\n    hover: \"orange\",\n    active: \"yellow\",\n    text: \"black\",\n    alt: {\n      normal: \"#3b3b3b\",\n      hover: \"#424242\",\n      active: \"#4f4f4f\",\n      text: \"#dbdbdb\",\n    },\n  },\n  shadowColor: \"rgba(0, 0, 0, 0.25)\",\n  shadow(dist) {\n    return `0 ${dist}px ${dist * 2}px ${darkTheme.shadowColor}`;\n  },\n};\n\nexport default darkTheme;\n","import Theme from \"types/Theme\";\n\nconst lightTheme: Theme = {\n  isDark: false,\n  bg: {\n    main: \"#ffffff\",\n    alt: \"#e3e3e3\",\n  },\n  text: {\n    main: \"#000000\",\n    alt: \"#474747\",\n  },\n  accent: {\n    main: \"#40c2ff\",\n    alt: \"#0083c9\",\n  },\n  item: {\n    normal: \"red\",\n    hover: \"orange\",\n    active: \"yellow\",\n    text: \"black\",\n    alt: {\n      normal: \"#e0e0e0\",\n      hover: \"#dbdbdb\",\n      active: \"#c7c7c7\",\n      text: \"#474747\",\n    },\n  },\n  shadowColor: \"rgba(0, 0, 0, 0.25)\",\n  shadow(dist) {\n    return `0 ${dist}px ${dist * 2}px ${lightTheme.shadowColor}`;\n  },\n};\n\nexport default lightTheme;\n","import React, { useState } from \"react\";\nimport ImageConfigurationContext from \"contexts/ParsedConfigurationContext\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport HomeView from \"views/HomeView/HomeView\";\nimport StandardLayout from \"layouts/StandardLayout/StandardLayout\";\nimport MovieView from \"views/HomeView/MovieView\";\nimport { ThemeProvider } from \"styled-components\";\nimport useConfiguration from \"hooks/useConfiguration\";\nimport Theme from \"types/Theme\";\nimport darkTheme from \"themes/darkTheme\";\nimport lightTheme from \"themes/lightTheme\";\n\nconst App: React.FC = () => {\n  const config = useConfiguration();\n  const [theme, setTheme] = useState<Theme>(darkTheme);\n\n  return (\n    <ThemeProvider\n      theme={{\n        dark: darkTheme,\n        light: lightTheme,\n        current: theme,\n        setTheme: setTheme,\n      }}\n    >\n      <ImageConfigurationContext.Provider value={config}>\n        <BrowserRouter>\n          <StandardLayout>\n            <Switch>\n              <Route exact path=\"/\">\n                <HomeView />\n              </Route>\n              <Route path=\"/movie/:id\">\n                <MovieView />\n              </Route>\n            </Switch>\n          </StandardLayout>\n        </BrowserRouter>\n      </ImageConfigurationContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import moviedb from \"api/moviedb\";\nimport { useEffect, useState } from \"react\";\nimport ParsedConfiguration from \"types/ParsedConfiguration\";\nimport { parseImageConfig } from \"util/imageUtil\";\n\nexport default function useConfiguration() {\n  const [imageConfig, setImageConfig] = useState<\n    ParsedConfiguration | undefined\n  >();\n\n  useEffect(() => {\n    moviedb\n      .configuration()\n      .then(parseImageConfig)\n      .then(setImageConfig)\n      .catch(console.error);\n  }, []);\n\n  return imageConfig;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"components/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}