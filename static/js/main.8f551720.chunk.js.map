{"version":3,"sources":["images/tmdb-logo.svg","types/SizeType.ts","contexts/ParsedConfigurationContext.ts","util/imageUtil.ts","hooks/useSources.ts","components/Poster/styles.ts","components/Poster/Poster.tsx","components/StarRating/StarRating.tsx","components/MovieListItem/styles.ts","components/MovieListItem/MovieListItem.tsx","components/MovieList/styles.ts","components/MovieList/MovieList.tsx","api/moviedb.ts","views/HomeView/HomeView.tsx","components/Footer/Footer.tsx","components/Header/styles.ts","components/Header/Header.tsx","layouts/StandardLayout/styles.ts","layouts/StandardLayout/StandardLayout.tsx","views/HomeView/MovieView.tsx","themes/darkTheme.ts","themes/lightTheme.ts","components/App/App.tsx","hooks/useConfiguration.ts","serviceWorker.ts","util/ghPagesUtil.ts","index.tsx"],"names":["module","exports","SizeType","ParsedConfigurationContext","React","createContext","undefined","parseImageConfig","images","baseUrl","base_url","secureBaseUrl","secure_base_url","backdropSizes","parseSizes","backdrop_sizes","logoSizes","logo_sizes","posterSizes","poster_sizes","profileSizes","profile_sizes","stillSizes","still_sizes","list","filter","size","startsWith","map","parseInt","substring","useSources","width","sizeType","path","useState","src","setSrc","srcSet","setSrcSet","sizes","setSizes","imageConfig","useContext","ImageConfigurationContext","useEffect","Poster","Backdrop","Profile","Still","Logo","newSources","minIndex","findIndex","usableSizes","slice","urls","url","i","toFixed","join","getSources","Wrapper","styled","div","height","theme","current","bg","alt","Img","img","title","data-testid","StarRating","rating","fullStarCount","Math","floor","hasHalfStar","Array","_","key","Cover","dark","text","main","CoverContent","shadow","Background","Container","accent","MovieListItem","movie","to","id","slugify","poster_path","vote_average","ScrollContainer","item","normal","hover","active","ChildContainer","ChildWrapper","ScrollSnapButton","preloadFallback","scroll","container","multiplier","scrollBy","behavior","left","window","innerWidth","MovieList","movies","label","scrollContainer","useRef","handleScrollLeft","useCallback","handleScrollRight","movieList","ref","onClick","style","right","moviedb","MovieDb","process","Home","setMovies","trending","media_type","time_window","then","v","results","Footer","marginTop","href","target","rel","TMDBLogo","header","LeftSection","RightSection","ThemeToggle","DemoNote","Header","useTheme","handleThemeToggle","setTheme","isDark","light","StandardLayout","children","MovieView","setMovie","params","useParams","movieInfo","catch","console","error","darkTheme","shadowColor","dist","lightTheme","App","config","setImageConfig","configuration","useConfiguration","Provider","value","exact","HomeView","Boolean","location","hostname","match","l","search","q","split","forEach","a","replace","p","history","replaceState","pathname","hash","ghPagesRedirect","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8f551720.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/tmdb-logo.24a6fdb9.svg\";","enum SizeType {\n  Poster,\n  Backdrop,\n  Profile,\n  Still,\n  Logo,\n}\n\nexport default SizeType;\n","import React from 'react';\nimport ParsedConfiguration from 'types/ParsedConfiguration';\n\nconst ParsedConfigurationContext = React.createContext<\n  ParsedConfiguration | undefined\n>(undefined);\n\nexport default ParsedConfigurationContext;\n","import { ConfigurationResponse } from 'moviedb-promise/dist/request-types';\nimport ImageConfiguration from 'types/ParsedConfiguration';\n\nexport function parseImageConfig({\n  images,\n}: ConfigurationResponse): ImageConfiguration {\n  return {\n    baseUrl: images.base_url || 'http://image.tmdb.org/t/p/',\n    secureBaseUrl: images.secure_base_url || 'https://image.tmdb.org/t/p/',\n    backdropSizes: parseSizes(images.backdrop_sizes),\n    logoSizes: parseSizes(images.logo_sizes),\n    posterSizes: parseSizes(images.poster_sizes),\n    profileSizes: parseSizes(images.profile_sizes),\n    stillSizes: parseSizes(images.still_sizes),\n  };\n}\n\nfunction parseSizes(list: string[] | undefined): number[] {\n  if (list === undefined) return [];\n\n  return list\n    .filter((size) => size.startsWith('w'))\n    .map((size) => parseInt(size.substring(1), 10));\n}\n\nexport function getSources(\n  path: string,\n  baseUrl: string,\n  sizes: number[],\n  width: number\n): { src: string; srcSet: string } {\n  const minIndex = sizes.findIndex((size) => size >= width);\n  const usableSizes = sizes.slice(minIndex);\n  const urls = usableSizes.map((size) => `${baseUrl}w${size}${path}`);\n  const srcSet = urls\n    .map((url, i) => `${url} ${(usableSizes[i] / usableSizes[0]).toFixed(1)}x`)\n    .join(', ');\n\n  return {\n    src: urls[0],\n    srcSet,\n  };\n}\n","import { useState, useContext, useEffect } from 'react';\nimport { getSources } from 'util/imageUtil';\nimport ImageConfigurationContext from 'contexts/ParsedConfigurationContext';\nimport SizeType from 'types/SizeType';\n\nconst useSources = (width: number, sizeType: SizeType, path?: string) => {\n  const [src, setSrc] = useState<string>();\n  const [srcSet, setSrcSet] = useState<string>();\n  const [sizes, setSizes] = useState<number[]>();\n\n  const imageConfig = useContext(ImageConfigurationContext);\n\n  useEffect(() => {\n    if (!imageConfig || !path) return;\n    switch (sizeType) {\n      case SizeType.Poster:\n        setSizes(imageConfig.posterSizes);\n        break;\n      case SizeType.Backdrop:\n        setSizes(imageConfig.backdropSizes);\n        break;\n      case SizeType.Profile:\n        setSizes(imageConfig.profileSizes);\n        break;\n      case SizeType.Still:\n        setSizes(imageConfig.stillSizes);\n        break;\n      case SizeType.Logo:\n        setSizes(imageConfig.logoSizes);\n        break;\n    }\n  }, [sizeType, imageConfig, path]);\n\n  useEffect(() => {\n    if (!path || !imageConfig || !sizes) return;\n    const newSources = getSources(\n      path,\n      imageConfig.secureBaseUrl,\n      sizes,\n      width\n    );\n\n    setSrc(newSources.src);\n    setSrcSet(newSources.srcSet);\n  }, [path, width, imageConfig, sizes]);\n\n  return { src, srcSet };\n};\n\nexport default useSources;\n","import styled from 'styled-components';\n\ninterface WrapperProps {\n  width: number;\n  height: number;\n}\n\nexport const Wrapper = styled.div<WrapperProps>`\n  width: ${({ width }) => width}px;\n  height: ${({ height }) => height}px;\n  background-color: ${({ theme }) => theme.current.bg.alt};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Img = styled.img`\n  user-select: none;\n  object-fit: cover;\n  width: 100%;\n  height: 100%;\n  transition-duration: 0.2s;\n`;\n","import React from 'react';\nimport useSources from 'hooks/useSources';\nimport SizeType from 'types/SizeType';\nimport { Img, Wrapper } from './styles';\n\ninterface PosterProps {\n  path?: string;\n  title?: string;\n  width: number;\n  height: number;\n}\n\nconst Poster: React.FC<PosterProps> = ({ path, title, width, height }) => {\n  const { src, srcSet } = useSources(width, SizeType.Poster, path);\n\n  return (\n    <Wrapper width={width} height={height}>\n      {src ? (\n        <Img\n          data-testid=\"poster-image\"\n          width={width}\n          height={height}\n          alt={title}\n          src={src}\n          srcSet={srcSet}\n        />\n      ) : null}\n    </Wrapper>\n  );\n};\n\nexport default Poster;\n","import React from 'react';\nimport { FaStar, FaStarHalf } from 'react-icons/fa';\n\ninterface StarRatingProps {\n  rating: number;\n}\n\nconst StarRating: React.FC<StarRatingProps> = ({ rating }) => {\n  const fullStarCount = Math.floor(rating / 2);\n  const hasHalfStar = rating % 2 >= 1;\n\n  return (\n    <div data-testid=\"star-container\">\n      {[...Array(fullStarCount)].map((_, i) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <FaStar key={i} />\n      ))}\n      {hasHalfStar ? <FaStarHalf data-testid=\"half-star\" /> : null}\n    </div>\n  );\n};\n\nexport default StarRating;\n","import styled from 'styled-components';\n\nexport const Cover = styled.div`\n  visibility: hidden;\n  opacity: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  border-radius: 1rem;\n  color: ${({ theme }) => theme.dark.text.main};\n  position: absolute;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  padding: 1rem;\n  justify-content: flex-end;\n  font-size: 1.25rem;\n  transition-duration: 0.2s;\n`;\n\nexport const CoverContent = styled.div`\n  visibility: hidden;\n  position: relative;\n  top: 1rem;\n  opacity: 0;\n  transition-duration: 0.2s;\n  text-shadow: ${({ theme }) => theme.current.shadow(1)};\n`;\n\nexport const Background = styled.div`\n  transition-duration: 0.2s;\n`;\n\nexport const Container = styled.div`\n  width: 220px;\n  height: 330px;\n  border-radius: 1rem;\n  overflow: hidden;\n  position: relative;\n  user-select: none;\n  transition-duration: 0.2s;\n\n  &:hover {\n    transform: translateY(-8px);\n    box-shadow: 0 4px 8px ${({ theme }) => theme.current.accent.main};\n  }\n\n  &:hover > ${Cover} {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:hover ${CoverContent} {\n    visibility: visible;\n    opacity: 1;\n    top: 0;\n  }\n\n  &:hover > ${Background} {\n    filter: blur(1px);\n    transform: scale(1.025);\n  }\n`;\n","import React from 'react';\nimport Poster from 'components/Poster/Poster';\nimport { MovieResult } from 'moviedb-promise/dist/request-types';\nimport StarRating from 'components/StarRating/StarRating';\nimport { Link } from 'react-router-dom';\nimport slugify from 'slugify';\nimport { Container, Cover, CoverContent, Background } from './styles';\n\ninterface MovieListItemProps {\n  movie?: MovieResult;\n}\n\nconst MovieListItem: React.FC<MovieListItemProps> = ({ movie }) => {\n  return (\n    <Link to={movie ? `/movie/${movie.id}/${slugify(movie.title || '')}` : '#'}>\n      <Container>\n        <Background>\n          <Poster\n            width={220}\n            height={330}\n            path={movie?.poster_path}\n            title={movie?.title}\n          />\n        </Background>\n        {movie ? (\n          <Cover>\n            <CoverContent>\n              <div>{movie.title}</div>\n              {movie.vote_average ? (\n                <StarRating rating={movie.vote_average} />\n              ) : null}\n            </CoverContent>\n          </Cover>\n        ) : null}\n      </Container>\n    </Link>\n  );\n};\n\nexport default MovieListItem;\n","import styled from 'styled-components';\n\nexport const ScrollContainer = styled.div`\n  display: flex;\n  overflow-x: auto;\n  height: 100%;\n  flex-wrap: nowrap;\n  scroll-snap-type: x mandatory;\n\n  &::-webkit-scrollbar {\n    height: 12px;\n    visibility: hidden;\n    background-color: ${({ theme }) => theme.current.bg.alt};\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background-color: ${({ theme }) => theme.current.item.alt.normal};\n    border-radius: 999px;\n    visibility: hidden;\n\n    &:hover {\n      background-color: ${({ theme }) => theme.current.item.alt.hover};\n    }\n    &:active {\n      background-color: ${({ theme }) => theme.current.item.alt.active};\n    }\n  }\n`;\n\nexport const ChildContainer = styled.div`\n  height: 100%;\n  margin: 8px 0;\n  display: flex;\n  scroll-snap-align: start;\n`;\n\nexport const ChildWrapper = styled.div`\n  scroll-snap-align: start;\n  padding-left: 16px;\n  &:first-child {\n    padding-left: 64px;\n  }\n  &:last-child {\n    padding-right: 64px;\n  }\n`;\n\nexport const ScrollSnapButton = styled.div`\n  background-color: ${({ theme }) => theme.current.item.alt.normal};\n  width: 64px;\n  height: 64px;\n  margin: 0 8px;\n  position: absolute;\n  top: calc(50% - 32px);\n  display: flex;\n  border-radius: 50%;\n  justify-content: center;\n  align-items: center;\n  user-select: none;\n  transition-duration: 0.2s;\n  visibility: hidden;\n  opacity: 0;\n  color: ${({ theme }) => theme.current.item.alt.text};\n  font-size: 2rem;\n  cursor: pointer;\n  box-shadow: ${({ theme }) => theme.current.shadow(2)};\n\n  &:hover {\n    border-radius: 50% 8px 8px 50%;\n    transform: scale(1.1);\n    background-color: ${({ theme }) => theme.current.item.alt.hover};\n    box-shadow: ${({ theme }) => theme.current.shadow(4)};\n  }\n\n  &:active {\n    transform: scale(1);\n    background-color: ${({ theme }) => theme.current.item.alt.active};\n    box-shadow: ${({ theme }) => theme.current.shadow(1)};\n  }\n\n  &:last-child:hover {\n    border-radius: 8px 50% 50% 8px;\n  }\n`;\n\nexport const Container = styled.div`\n  position: relative;\n\n  &:hover > ${ScrollSnapButton} {\n    visibility: visible;\n    opacity: 1;\n  }\n\n  &:hover > ${ScrollContainer}::-webkit-scrollbar {\n    visibility: visible;\n  }\n  &:hover > ${ScrollContainer}::-webkit-scrollbar-thumb {\n    visibility: visible;\n  }\n`;\n","import React, { useCallback, useRef } from 'react';\nimport MovieListItem from 'components/MovieListItem/MovieListItem';\nimport { MovieResult } from 'moviedb-promise/dist/request-types';\nimport { FaCaretLeft, FaCaretRight } from 'react-icons/fa';\nimport {\n  Container,\n  ChildContainer,\n  ChildWrapper,\n  ScrollSnapButton,\n  ScrollContainer,\n} from './styles';\n\ninterface MovieListProps {\n  movies?: MovieResult[];\n  label?: string;\n}\n\nconst preloadFallback: undefined[] = [...Array(10)];\n\nfunction scroll(container: HTMLDivElement | null, multiplier: number) {\n  if (container)\n    container.scrollBy({\n      behavior: 'smooth',\n      left: window.innerWidth * multiplier,\n    });\n}\n\nconst MovieList: React.FC<MovieListProps> = ({ movies, label }) => {\n  const scrollContainer = useRef<HTMLDivElement>(null);\n\n  const handleScrollLeft = useCallback(() => {\n    scroll(scrollContainer.current, -0.5);\n  }, []);\n\n  const handleScrollRight = useCallback(() => {\n    scroll(scrollContainer.current, 0.5);\n  }, []);\n\n  const movieList: (MovieResult | undefined)[] = movies || preloadFallback;\n\n  return (\n    <Container>\n      <h2>{label}</h2>\n      <ScrollContainer ref={scrollContainer}>\n        <ChildContainer>\n          {movieList.map((movie, i) => (\n            <ChildWrapper key={movie?.id || i}>\n              <MovieListItem movie={movie} />\n            </ChildWrapper>\n          ))}\n        </ChildContainer>\n      </ScrollContainer>\n      <ScrollSnapButton onClick={handleScrollLeft} style={{ left: 0 }}>\n        <FaCaretLeft />\n      </ScrollSnapButton>\n      <ScrollSnapButton onClick={handleScrollRight} style={{ right: 0 }}>\n        <FaCaretRight />\n      </ScrollSnapButton>\n    </Container>\n  );\n};\n\nexport default MovieList;\n","import { MovieDb } from 'moviedb-promise';\n\nif (!process.env.REACT_APP_API_KEY) throw new Error('No API key provided');\n\nconst moviedb = new MovieDb(process.env.REACT_APP_API_KEY);\n\nexport default moviedb;\n","import React, { useEffect, useState } from 'react';\nimport MovieList from 'components/MovieList/MovieList';\nimport moviedb from 'api/moviedb';\nimport { MovieResult } from 'moviedb-promise/dist/request-types';\n\nconst Home: React.FC = () => {\n  const [movies, setMovies] = useState<MovieResult[]>();\n\n  useEffect(() => {\n    moviedb\n      .trending({ media_type: 'movie', time_window: 'week' })\n      .then((v) => v.results as MovieResult[])\n      .then(setMovies);\n  }, []);\n\n  return (\n    <div>\n      <MovieList movies={movies} />\n    </div>\n  );\n};\n\nexport default Home;\n","import React from 'react';\nimport TMDBLogo from 'images/tmdb-logo.svg';\n\nconst Footer: React.FC = () => {\n  return (\n    <footer style={{ marginTop: 'auto' }}>\n      <a\n        href=\"https://developers.themoviedb.org/3\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <img width={128} src={TMDBLogo} alt=\"The Movie DB\" />\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import styled from 'styled-components';\n\nexport const Container = styled.header``;\n\nexport const LeftSection = styled.div``;\n\nexport const RightSection = styled.div``;\n\nexport const ThemeToggle = styled.div``;\n\nexport const DemoNote = styled.div`\n  background-color: ${({ theme }) => theme.current.bg.alt};\n  color: ${({ theme }) => theme.current.text.alt};\n  font-size: 1rem;\n  padding: 0.125rem 0.5rem 0.25rem;\n  box-shadow: ${({ theme }) => theme.current.shadow(1)};\n  transition-duration: 0.3s;\n  text-align: center;\n`;\n","import React, { useCallback } from 'react';\nimport { FaAdjust } from 'react-icons/fa';\nimport { useTheme } from 'styled-components';\nimport {\n  Container,\n  LeftSection,\n  RightSection,\n  ThemeToggle,\n  DemoNote,\n} from './styles';\n\nconst Header: React.FC = () => {\n  const theme = useTheme();\n\n  const handleThemeToggle = useCallback(() => {\n    theme.setTheme(theme.current.isDark ? theme.light : theme.dark);\n  }, [theme]);\n\n  return (\n    <Container>\n      <DemoNote>\n        This page is a demo which does not provide any actual video content.\n      </DemoNote>\n      <LeftSection />\n      <RightSection>\n        <ThemeToggle onClick={handleThemeToggle}>\n          <FaAdjust />\n        </ThemeToggle>\n      </RightSection>\n    </Container>\n  );\n};\n\nexport default Header;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  background-color: ${({ theme }) => theme.current.bg.main};\n  color: ${({ theme }) => theme.current.text.main};\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  transition: background-color 0.4s, color 0.4s;\n`;\n","import React from 'react';\nimport Footer from 'components/Footer/Footer';\nimport Header from 'components/Header/Header';\nimport { Container } from './styles';\n\nconst StandardLayout: React.FC = ({ children }) => {\n  return (\n    <Container>\n      <Header />\n      {children}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default StandardLayout;\n","import React, { useEffect, useState } from 'react';\nimport Poster from 'components/Poster/Poster';\nimport moviedb from 'api/moviedb';\nimport { useParams } from 'react-router-dom';\nimport { MovieResponse } from 'moviedb-promise/dist/request-types';\n\nconst MovieView: React.FC = () => {\n  const [movie, setMovie] = useState<MovieResponse>();\n  const params = useParams<{ id: string }>();\n\n  useEffect(() => {\n    moviedb.movieInfo(params.id).then(setMovie).catch(console.error);\n  }, [params]);\n\n  return (\n    <div>\n      <Poster\n        path={movie?.poster_path}\n        width={256}\n        height={384}\n        title={movie?.title}\n      />\n    </div>\n  );\n};\n\nexport default MovieView;\n","import Theme from 'types/Theme';\n\nconst darkTheme: Theme = {\n  isDark: true,\n  bg: {\n    main: '#242424',\n    alt: '#303030',\n  },\n  text: {\n    main: '#f0f0f0',\n    alt: '#dbdbdb',\n  },\n  accent: {\n    main: '#40c2ff',\n    alt: '#0083c9',\n  },\n  item: {\n    normal: 'red',\n    hover: 'orange',\n    active: 'yellow',\n    text: 'black',\n    alt: {\n      normal: '#3b3b3b',\n      hover: '#424242',\n      active: '#4f4f4f',\n      text: '#dbdbdb',\n    },\n  },\n  shadowColor: 'rgba(0, 0, 0, 0.25)',\n  shadow(dist) {\n    return `0 ${dist}px ${dist * 2}px ${darkTheme.shadowColor}`;\n  },\n};\n\nexport default darkTheme;\n","import Theme from 'types/Theme';\n\nconst lightTheme: Theme = {\n  isDark: false,\n  bg: {\n    main: '#ffffff',\n    alt: '#e3e3e3',\n  },\n  text: {\n    main: '#000000',\n    alt: '#474747',\n  },\n  accent: {\n    main: '#40c2ff',\n    alt: '#0083c9',\n  },\n  item: {\n    normal: 'red',\n    hover: 'orange',\n    active: 'yellow',\n    text: 'black',\n    alt: {\n      normal: '#e0e0e0',\n      hover: '#dbdbdb',\n      active: '#c7c7c7',\n      text: '#474747',\n    },\n  },\n  shadowColor: 'rgba(0, 0, 0, 0.25)',\n  shadow(dist) {\n    return `0 ${dist}px ${dist * 2}px ${lightTheme.shadowColor}`;\n  },\n};\n\nexport default lightTheme;\n","import React, { useState } from 'react';\nimport ImageConfigurationContext from 'contexts/ParsedConfigurationContext';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport HomeView from 'views/HomeView/HomeView';\nimport StandardLayout from 'layouts/StandardLayout/StandardLayout';\nimport MovieView from 'views/HomeView/MovieView';\nimport { ThemeProvider } from 'styled-components';\nimport useConfiguration from 'hooks/useConfiguration';\nimport Theme from 'types/Theme';\nimport darkTheme from 'themes/darkTheme';\nimport lightTheme from 'themes/lightTheme';\n\nconst App: React.FC = () => {\n  const config = useConfiguration();\n  const [theme, setTheme] = useState<Theme>(darkTheme);\n\n  return (\n    <ThemeProvider\n      theme={{\n        dark: darkTheme,\n        light: lightTheme,\n        current: theme,\n        setTheme,\n      }}\n    >\n      <ImageConfigurationContext.Provider value={config}>\n        <BrowserRouter>\n          <StandardLayout>\n            <Switch>\n              <Route exact path=\"/\">\n                <HomeView />\n              </Route>\n              <Route path=\"/movie/:id\">\n                <MovieView />\n              </Route>\n            </Switch>\n          </StandardLayout>\n        </BrowserRouter>\n      </ImageConfigurationContext.Provider>\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n","import moviedb from 'api/moviedb';\nimport { useEffect, useState } from 'react';\nimport ParsedConfiguration from 'types/ParsedConfiguration';\nimport { parseImageConfig } from 'util/imageUtil';\n\nexport default function useConfiguration() {\n  const [imageConfig, setImageConfig] = useState<\n    ParsedConfiguration | undefined\n  >();\n\n  useEffect(() => {\n    moviedb\n      .configuration()\n      .then(parseImageConfig)\n      .then(setImageConfig)\n      .catch(console.error);\n  }, []);\n\n  return imageConfig;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * https://github.com/rafgraph/spa-github-pages\n */\n\nexport function ghPagesRedirect(l: Location) {\n  if (l.search) {\n    const q: { [key: string]: string | undefined } = {};\n    l.search\n      .slice(1)\n      .split('&')\n      .forEach((v) => {\n        const a = v.split('=');\n        q[a[0]] = a.slice(1).join('=').replace(/~and~/g, '&');\n      });\n\n    if (q.p !== undefined) {\n      window.history.replaceState(\n        null,\n        '',\n        l.pathname.slice(0, -1) + (q.p || '') + (q.q ? `?${q.q}` : '') + l.hash\n      );\n    }\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from 'components/App/App';\nimport { ghPagesRedirect } from 'util/ghPagesUtil';\nimport * as serviceWorker from './serviceWorker';\n\n// If user is on gh-pages, we use a trick to redirect 404 pages back to our SPA\nghPagesRedirect(window.location);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}